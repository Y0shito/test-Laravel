2021/09/16

全体を見てもらう

CSSフレームワーク：Bootstrap4
ログイン、Twitterログイン
検索(AND,NOT)
CRUD
ページネーション
ソート
ブックマーク
フォロー
退会機能（及び関連レコードの削除）

認識している問題
・FatController
・Eagerロードが未実装
・メソッドが継ぎ接ぎの状態
・見た目の調整

聞きたいこと
・全体的な設計は問題なさそうか
・実装すべきものはあるか

時間あれば聞きたいこと
・退会処理時のBoot->deleteingの処理や、hasManyThroughの処理、考え方は合っているか→OK
・ソートをデフォルトでdescにしたい(Kyslik/column-sortable)
→要修正
・記事の新規投稿、更新をupdateOrCreateでしているが、created_at、updated_atが同時に記録されてしまう->新規時はcreated、更新時はupdatedだけ記録したい
→後日

----------------------

2021/09/17

・カテゴリ、open(0/1)の定数をEnum化
→Laravel-Enumで実装

・Articleのopen/closeをスコープ化
→ローカルスコープとして実装

・トランザクション
レコード挿入/削除ら辺全てトランザクション化
→トランザクションを入れるべき範囲はどこまで？
→食い違いが起こると困る箇所（1度に複数テーブルまたはカラムの変更が発生する場合）で行えばいい？
(CRUD発生する箇所全て？変更レコードが1件のみでも必要か？)

・トレイト
よく使うパターンなどをトレイトし使いまわしが出来るようにする
→実装完了、ただしcontroller::taritの形での呼び出しだが正解？
→trait::traitの形で動く

・メソッドの名前被り
ここではgetfollowsとget()メソッド直す
→使用部分バラバラの為、確認しながら修正していく

・layoutsフォルダはテンプレートbladeのみ入れる
（今回はそのまま、次回は直す）

・Userのboot()のInfoテーブル自動作成部分
→Infoモデル内のboot()に入れる？
→boot()を使うなという話、メソッドそのものはOK

以下JS周りは一旦保留、知識が足りなさすぎる
①記事delete時ログアウトされるバグの修正
またdelete時confirm出す

②全てのbuttonを2度押し防止

③JSの別ファイル化
public/js内に入れて、bladeではasset()で突っ込む

・テストの意義
現在動作確認をブラウザ上で動かして確認しているが、それをエディタ上で実現するのがテストということか
以前ではいちいち同じ作業（ユーザー登録→削除、記事投稿→削除など）を繰り返していたが、簡略化できるか？
→ブラウザで動かすものを自動化するのはE2Eテスト(Selenium、Laravel Dusk)、ファンクション単位で動作確認するのがUnitテスト(PHP Unit、Laravel Unit)、基本文法など処理を走らせずに確認するのが静的解析(PHP stan)
model→controller→viewの順で行う

以下は時間があれば

・PHP-fixcer
→インストールはOK、ただしエラー「You must call one of in() or append() methods before iterating over a Finder.」
→./vendor/bin/php-cs-fixer fix ./ で走った

・セキュリティについて
気をつけるべき点→対処する箇所
スクリプト挿入攻撃、XSS→エスケープ
CSRF→@csrf
SQLインジェクション→eloquent使っていればOK?
セッション固定攻撃
セッションハイジャック
→この辺りはLaravelをまともに組んでいれば大げさに意識しなくても良い
強いて言えば検索周りは注意
あとphp.iniファイル（立ち上げ時の話）も注意

・ソートをデフォルトでdescにしたい(Kyslik/column-sortable)
→ボタンが3つあり、そのうち「閲覧数」のみdescにしたい
→Controller内で...->sortable(['view' => 'desc'])->...;
→ページ開いてデフォルトで閲覧数がdescに並んでいるのであって、「閲覧数」ボタンの働きはascのまま

そもそもpostとgetの使い分けは？
aとbuttonの使い分け
